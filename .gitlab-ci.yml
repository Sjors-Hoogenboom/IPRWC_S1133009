stages:
  - verify
  - test
  - build
  - deploy

# verify-frontend:
#   stage: verify
#   image: node:20
#   script:
#     - cd angular
#     - npm ci
#     - npm run lint
#   allow_failure: true
#   artifacts:
#     when: always
#     paths:
#       - angular/.eslintcache

# verify-backend:
#   stage: verify
#   image: maven:3.9.9-amazoncorretto-21
#   script:
#     - cd spring
#     - mvn checkstyle:check
#   allow_failure: true
#   artifacts:
#     when: always
#     paths:
#       - spring/target

test-backend:
  stage: test
  image: maven:3.9.9-amazoncorretto-21
  services:
    - name: mysql:8.0.41
      alias: db
  variables:
    MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
    MYSQL_DATABASE: $MYSQL_DATABASE
    JWT_SECRET: $JWT_SECRET
    CORS_ALLOWEDORIGINS: "*"
    ADMIN_EMAIL: $ADMIN_EMAIL
    ADMIN_NAME: $ADMIN_NAME
    ADMIN_PASSWORD: $ADMIN_PASSWORD
  script:
    - cd spring
    - mvn test

test-frontend:
  stage: test
  image: node:20
  script:
    - cd angular
    - ng test --watch=false

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t frontend-angular ./frontend
    - docker build -t backend-spring ./backend
  only:
    - master

